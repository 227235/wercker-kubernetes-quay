build:
    box: google/golang
    steps:
    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

        # Build the project
    - script:
        name: go build
        code: |
          CGO_ENABLED=0 go build -a -installsuffix cgo -o app .
        # Copy binary to location that gets passed along to deploy
    - script:
        name: copy binary
        code: cp app cities-service.json cities-controller.json "$WERCKER_OUTPUT_DIR"

deploy:
    box:
        id: busybox
        cmd: /bin/sh
    steps:
    - script:
        name: make executable
        code: chmod +x /pipeline/source/app

    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD
        cmd: ./pipeline/source/app
        tag: latest
        ports: "5000"
        repository: quay.io/wercker/wercker-kubernetes-quay
        registry: https://quay.io

    # Run this to create the rc and service
    initialize:
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        skip-tls-verify: true
        command: create -f cities-controller.json

    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        skip-tls-verify: true
        command: create -f cities-service.json

    rolling-update:
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        skip-tls-verify: true
        command: rolling-update
        image: quay.io/wercker/go-app:latest

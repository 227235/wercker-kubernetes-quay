build:
    box: google/golang
    steps:
    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

        # Build the project
    - script:
        name: go build
        code: |
          go build -o app ./...
        # Copy binary to location that gets passed along to deploy
    - script:
        name: copy binary
        code: cp app $WERCKER_OUTPUT_DIR

deploy:
    box: phusion/baseimage
    steps:
    - script:
        name: make exec
        code: chmod +x /pipeline/source/app

    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD
        cmd: ./pipeline/source/app
        tag: latest
        ports: "5000"
        repository: quay.io/wercker/go-app
        registry: https://quay.io

    # Run this to create the rc and service
    initialize:
    - script:
        name: fetch kube
        code: ./download-kube.sh

    - script:
        name: create rc
        code: |
            kubernetes/platform/linux/amd64/kubectl kubernetes/platforms/linux/amd64/kubectl \
                --server="${KUBERNETES_MASTER}" \
                --username="${KUBERNETES_USERNAME}" \
                --password="${KUBERNETES_PASSWORD}" \
                --insecure-skip-tls-verify="true" \
                create -f cities-controller.json

    - script:
        name: create service
        code: |
            kubernetes/platform/linux/amd64/kubectl kubernetes/platforms/linux/amd64/kubectl \
                --server="${KUBERNETES_MASTER}" \
                --username="${KUBERNETES_USERNAME}" \
                --password="${KUBERNETES_PASSWORD}" \
                --insecure-skip-tls-verify="true" \
                create -f cities-service.json

    rolling-update:
    - script:
        name: fetch kube
        code: ./download-kube.sh

    - script:
        name: rolling update
        code:
